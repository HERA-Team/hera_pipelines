{# 
   This is a Jinja2 *template* file for the lstbin makeflow. Use `herapipes lstbin-setup` 
   to generate specific lstbin makeflows for different cases. This template has a few 
   variables that can be used to generate a makeflow for a specific case. These are:
   
   {{ REPODIR }}     : the directory of the hera-pipelines repo 
   {{ SEASON }}      : the season to process
   {{ IDR }}         : the IDR major number
   {{ GENERATION }}  : the IDR generation number
   {{ ANALYSISDIR }} : the top-level directory where the analysis is being done
   {{ CASENAME }}    : the name of the case (e.g. "redavg-abscal-inpaint")
   {{ INPAINT_EXT }} : the extension of the where_inpainted files: eiter "none" or ".where_inpainted.h5", depending on the case.
   {{ DATA_EXT }}    : the extension of the data files -- set by the case (e.g. "abs_calibrated.red_avg.inpaint.uvh5")
   {{ INPAINT_FORMAT }} : this gets set to "{inpaint_mode}/" if the case uses inpaint mode
   {{ CALEXT }}      : specifies the calfits file extension, or none if datafiles are already calibrated (e.g. ".smooth.calfits")
   {{ FLAGGED_AVERAGE }} : True if doing a flagged averaged, False otherwise
   {{ REDAVG }}      : True if using redundantly averaged data, False otherwise
   {{ INPAINT_DELAY }} : The minimum inpaint delay in ns (e.g. 1000.0)
   {{ DO_LSTCAL }}   : True if using lstcal, False otherwise.
   {{ LSTCAL_CASE }} : The name of the lstbin case to be used for lstcal for cases that need to be broken into chunks.
 
  Note that all lines starting with '#!' will be removed in the created TOML file.
  Further note that you can use conditional statements using {% if VARIABLE -%}.
#}
# This is the lstbin TOML file for the {{ CASENAME }} case.

[Options]
makeflow_type = "lstbin"
path_to_do_scripts = "{{ REPODIR }}/pipelines/{{ SEASON }}/idr{{ IDR }}/v{{ GENERATION }}/lstbin/task_scripts/"
source_script = "~/.bashrc"
conda_env = "h6c_idr2"
base_mem = {{ 24000 if REDAVG else 32000 }}
base_cpu = 1
timeout = "48h"

[LSTBIN_OPTS]                                                                                                                                                                                                                                                                                                                                               
# ---- Parameters used by hera_opm to build the makeflow ----
outdir = "${LSTAVG_OPTS:outdir}"
bl_chunk_size = 2000
parallelize = true


[FILE_CFG]
# This section specifies a file configuration for LST-binning.
# The possible parameters here any input attribute of the
# LSTBinConfiguration class in hera_cal.lst_stack.config.
# The 'datafiles' section can contain any parameter that is
# passed to the `.find_datafiles()` method of that class.
nlsts_per_file = 2
lst_start = 0.0
antpairs_from_last_file_each_night = true
{% if not REDAVG %}
# The following rules replace parts of the data file names to match their associated
# calibration file. Curiously, since the FastUVH5Meta object does a path.resolve() on
# the data file, the symlinks in the IDR2 directory get resolved back to the main
# folder where we download the raw data from the librarian, but the calibration solutions
# do not exist there, and so are not found. So we forcibly also replace the main path.
calfile_rules = [
  ["/lustre/aoc/projects/hera/H6C/", "/lustre/aoc/projects/hera/h6c-analysis/IDR2/"],
  [".uvh5", ".smooth.calfits"]
]
{% endif %}

[FILE_CFG.datafiles]                                                                                                                                                                 
# Arguments to specify input files.
# Files to be read will be:
#    {datadir}/{nightdir}/zen.{jdglob}.{sd}.{label}[.]{extension}
datadir="/lustre/aoc/projects/hera/h6c-analysis/IDR{{ IDR }}/"
nights=[
  "2459861", "2459862", "2459863", "2459864", "2459866", 
  "2459867", "2459868", "2459869", "2459870", "2459871", 
  "2459872", "2459873", "2459874", "2459876"
]
fileglob = "{night}/zen.{night}.?????.sum{{ DATA_EXT }}.uvh5"

[LSTAVG_OPTS]
# Options for the notebook running -- i.e. the metrics and averaging.
outdir = "/lustre/aoc/projects/hera/h6c-analysis/IDR{{ IDR }}/lstbin-outputs/{{ CASENAME }}/"
bl_chunk_size = "${LSTBIN_OPTS:bl_chunk_size}"
fname_format = "{inpaint_mode}/zen.{kind}.{lst:7.5f}.{blchunk}.sum.uvh5"
overwrite=true
write_med_mad=false
plot_every=180  # about 1 hour
save_metric_data = true  # this should be updated for the real runs
save_lstbin_data = true
do_extra_flagging = false
inpaint_method="per-night"
spws="50.1~62.2,63.3~73.5,74.6~85.4,108.0~116.1,117.3~124.4,125.3~136.2,138.3~148.2,150.1~159.2,159.3~169.9,171.9~181.1,181.4~196.4,198.5~208.4,212.3~220.6,224.4~231.1"
inpaint_mindelay = {{ INPAINT_DELAY}}
do_lstcal = {{ DO_LSTCAL|string|lower }}
{% if not REDAVG -%}
lstcal_path = "/lustre/aoc/projects/hera/h6c-analysis/IDR{{ IDR }}/lstbin-outputs/{{ LSTCAL_CASE }}"
{% endif %}
isvalidation "0"
# ========================================= THE WORKFLOW ========================
[WorkFlow]
actions = ["PER_OUTFILE_LSTSTACK_METRICS_NOTEBOOK"]

[PER_OUTFILE_LSTSTACK_METRICS_NOTEBOOK]
args = [
  "outdir", "lstconf", "lstavg_toml_file", "output_file_select", "kernel", "output_blchnk_select", "isvalidation"
]
